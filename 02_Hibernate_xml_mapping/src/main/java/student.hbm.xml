<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="ua.com.library.entity.Student" table="Student">
		<id name="id" type="int" column="id">
			<generator class="increment"></generator>
		</id>
		<property name="firstName" type="string" column="firstName"></property>
		<property name="lastName" type="string" column="lastName"></property>
		<!-- тег list описує аналогічне поле класу, параметр cascade описує як будуть поводитись зв`язані елементи БД -->
		<!-- подивитись в конспект по sql -->
		<list name="books" cascade="all">
		<!-- FK відображається в таблиці Book -->
			<key column="student_id"></key>
			<!-- індекс елемента в list-і -->
			<list-index column="idx"></list-index>
			<!-- посилання на зв`язок -->
			<one-to-many class="ua.com.library.entity.Book"/>
		</list>
		<!-- по аналогії з лістом -->
		<!-- inverse з однієї сторони має бути true з іншої false, якщо цього не вказати будуть створені 2 додаткові таблиці -->
		<!-- lazy це тип ініціалізації, коли true сет чи ліст не завантажується з БД відразу, а лише коли використовується get -->
		<!-- table це назва таблиці в якій буде відображений цей зв`язок -->
		<!-- це таблиця з двума FK з обох класів -->
		<set name="subjects" inverse="false" lazy="true" table="student_subject" cascade="all">
		<!-- тег який описує FK в винесеній таблиці при зв`язку багато-до-багатьох -->
			<key>
			<!-- важливо! потрібно винести column в окремий тег, для того що б гібернейт розумів що цей стовпець буде в окремій таблиці -->
			<!-- зверніть увагу на порядок і значення тегів column -->
			<!-- з іншої сторони зв`зку (в файлі subject.hbm.xml) вони тіж просто в зворотньому порядку -->
				<column name="student_id"/>
			</key>
			<!-- зв`язок багато-до-багатьох і посилання на клас з яким цей утворений цей зв`язок-->
			<many-to-many class="ua.com.library.entity.Subject">
			<!-- важливо! потрібно винести column в окремий тег, для того що б гібернейт розумів що цей стовпець буде в окремій таблиці -->
				<column name="subject_id"/>
			</many-to-many>
		</set>
	</class>
</hibernate-mapping>